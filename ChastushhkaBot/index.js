const TelegramApi = require('node-telegram-bot-api') //Telegram Api
const gTTS = require('gtts') // google Text-To-Speech
const fs = require('fs') // file system
const path = require('path') // path to file
const ffmpeg = require('fluent-ffmpeg') // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—É–¥–∏–æ (–æ—á–µ–Ω—å —Å–∏–ª—å–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º—É–ª—å—Ç–∏–º–µ–¥–∏–∞)
const ffmpegPath = require('ffmpeg-static') // –ø—É—Ç—å –∫ ffmpeg

const token = '7326293550:AAG73aSy1swxcmyq1_eq4d1eZdXS8TVxPfk'
const bot = new TelegramApi(token, { polling: true }) //–±–æ—Ç –æ–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Å–µ—Ä–≤–µ—Ä Telegram –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π

const processingQueue = new Set() //–ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è

function removeSpecialCharacters(text) {
	return text.replace(/[^–∞-—è–ê-–Ø—ë–Åa-zA-Z\s.,!?-]/gi, '') // –æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è
}

const SkeletBota = () => {
	bot.setMyCommands([{ command: '/start', description: '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –±–æ—Ç–∞' }])
	bot.on('message', async msg => {
		const chatId = msg.chat.id
		const messageId = msg.message_id
		const text = msg.text

		const processKey = `${chatId}_${messageId}` 

		if (processingQueue.has(processKey)) { //has - –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ, —Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ
			return
		} //–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ

		processingQueue.add(processKey) //–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –æ—á–µ—Ä–µ–¥—å

		let audioFile, processedAudio, outputFile
		let processingMessage = null

		try {
			if (text === '/start') {
				await bot.sendMessage(
					chatId,
					'üéµ –ü—Ä–∏–≤–µ—Ç! –Ø —á–∞—Å—Ç—É—à–∫–∞ –±–æ—Ç\n–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–µ–∫—Å—Ç –æ—Ç 90 –¥–æ 110 —Å–∏–º–≤–æ–ª–æ–≤, –∏ —è –ø—Ä–µ–≤—Ä–∞—â—É –µ–≥–æ –≤ –º—É–∑—ã–∫–∞–ª—å–Ω—É—é —á–∞—Å—Ç—É—à–∫—É!'
				)

				const exampleAudio = path.join(__dirname, 'Chastushka_example.mp3')
				if (fs.existsSync(exampleAudio)) {
					await bot.sendAudio(chatId, exampleAudio)
				} else {
					console.warn('–ü—Ä–∏–º–µ—Ä –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω ‚ùå')
				}
				return
			}
			//–∏–≥–Ω–æ—Ä –∫–æ–º–∞–Ω–¥
			if (!text || text.startsWith('/')) {
				return
			} 
			//–ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã —Ç–µ–∫—Å—Ç–∞
			if (text.length < 90) {
				await bot.sendMessage(
					chatId,
					'–¢–≤–æ–π —Ç–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π. –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞ - 90 —Å–∏–º–≤–æ–ª–æ–≤ ‚¨áÔ∏è'
				)
				return
			}
			if (text.length > 110) {
				await bot.sendMessage(
					chatId,
					'–¢–≤–æ–π —Ç–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞ - 110 —Å–∏–º–≤–æ–ª–æ–≤ ‚¨ÜÔ∏è'
				)
				return
			}
			//–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ —Ü–∏—Ñ—Ä
			if (/\d/.test(text)) {
				await bot.sendMessage(
					chatId,
					'–ë–æ—Ç –Ω–µ –æ–∑–≤—É—á–∏–≤–∞–µ—Ç —Ü–∏—Ñ—Ä—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–¥–∞–ª–∏—Ç–µ —Ü–∏—Ñ—Ä—ã –∏–∑ —Ç–µ–∫—Å—Ç–∞ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ üîÑ'
				)
				return
			} 
			//—á–∏—Å—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
			const cleanedText = removeSpecialCharacters(text)
			if (!cleanedText.trim()) {
				await bot.sendMessage(
					chatId,
					'–ë–æ—Ç –Ω–µ –æ–∑–≤—É—á–∏–≤–∞–µ—Ç —Å–ø–µ—Ü —Å–∏–º–≤–æ–ª—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ üîÑ'
				)
				return
			}

			processingMessage = await bot.sendMessage(
				chatId,
				'–†–∞–±–æ—Ç–∞—é –Ω–∞–¥ —á–∞—Å—Ç—É—à–∫–æ–π ‚åõ',
				{ reply_to_message_id: messageId }
			)

			const timestamp = Date.now()
			audioFile = path.join(__dirname, `audio_${timestamp}.mp3`) //–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è Text-To-Speech
			processedAudio = path.join(__dirname, `processed_${timestamp}.mp3`) //–û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –≥–æ–ª–æ—Å
			outputFile = path.join(__dirname, `–ß–∞—Å—Ç—É—à–∫–∞.mp3`) //–§–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
			const musicFile = path.join(__dirname, 'background.mp3') //–º—É–∑—ã–∫–∞ –Ω–∞ –∑–∞–¥–Ω–µ–º —Ñ–æ–Ω–µ

			await new Promise((resolve, reject) => {
				new gTTS(cleanedText, 'ru').save(audioFile, err =>
					err ? reject(err) : resolve()
				)
			})

			await new Promise((resolve, reject) => {
				ffmpeg(audioFile) //–æ–±—Ä–∞–±–æ—Ç–∫–∞
					.setFfmpegPath(ffmpegPath) //–ø—É—Ç—å –∫ FFmpeg
					.audioFilters('adelay=10000|10000,volume=7,atempo=1.27') //–∑–∞–¥–µ—Ä–∂–∫–∞ –º—É–∑—ã–∫–∏ –∑–∞–¥–Ω–µ–≥–æ —Ñ–æ–Ω–∞, –≥—Ä–æ–º–∫–æ—Å—Ç—å –≥–æ–ª–æ—Å–∞ –∏ —Ç–µ–º–ø –≥–æ–ª–æ—Å–∞
					.on('error', reject)
					.on('end', resolve)
					.save(processedAudio)
			})

			fs.unlinkSync(audioFile) //—É–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ TTS

			await new Promise((resolve, reject) => {
				ffmpeg()
					.setFfmpegPath(ffmpegPath)
					.input(musicFile) //—Ñ–æ–Ω–æ–≤–∞—è –º—É–∑—ã–∫–∞
					.input(processedAudio) //–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –≥–æ–ª–æ—Å
					.complexFilter([
						'[0:a]volume=0.7[bg]', //–≥—Ä–æ–º–∫–æ—Å—Ç—å —Ñ–æ–Ω–æ–≤–æ–π –º—É–∑—ã–∫–∏
						'[1:a]volume=1.3[voice]', //–≥—Ä–æ–º–∫–æ—Å—Ç—å –≥–æ–ª–æ—Å–∞
						'[bg][voice]amix=inputs=2:duration=longest', //—Å–º–µ—à–∏–≤–∞–Ω–∏–µ
					])
					.on('error', reject)
					.on('end', resolve)
					.save(outputFile)
			})
			fs.unlinkSync(processedAudio) //—É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–º–µ–∂—É—Ç–∞—á–Ω–æ–≥–æ —Ñ–∞–π–ª–∞

			if (processingMessage) {
				await bot.deleteMessage(chatId, processingMessage.message_id) //—É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ä–∞–±–æ—Ç–µ —Å —á–∞—Å—Ç—É—à–∫–æ–π
			}

			await bot.sendAudio(chatId, outputFile) //–±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —á–∞—Å—Ç—É—à–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
		} catch (error) {
			console.error(error)
			if (processingMessage) {
				await bot
					.deleteMessage(chatId, processingMessage.message_id)
					.catch(e => console.error(e))
			}
			await bot.sendMessage(
				chatId,
				'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ ‚ùå'
			)
		} finally {
			try {
				if (audioFile && fs.existsSync(audioFile)) fs.unlinkSync(audioFile)
				if (processedAudio && fs.existsSync(processedAudio))
					fs.unlinkSync(processedAudio)
				if (outputFile && fs.existsSync(outputFile)) fs.unlinkSync(outputFile)
			} catch (err) {
				console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤:', err)
			}

			processingQueue.delete(processKey)
		}
	})
}

SkeletBota()
/////////////////////////////////////////////////////////////////////////////////////////////////////
//1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç—å –¥–ª–∏–Ω—É - 123
//2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–µ—Ä–µ–∏–∑–±—ã—Ç–æ—á–Ω–æ—Å—Ç—å –¥–ª–∏–Ω—ã
//11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
//3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏–µ —Å–ø–µ—Ü. —Å–∏–º–≤–æ–ª–æ–≤
//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
//4. –ß–∞—Å—Ç—É—à–∫–∞ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞:

// –ù–∞ –¥–∏—Å–∫–æ—Ç–µ–∫—É —è —Å–ø–µ—à—É,
// –í –¥–∂–∏–Ω—Å–∞—Ö –Ω–æ–≤—ã—Ö –∏ –≤ —Å–∞–ø–æ–∂–∫–∞—Ö!
// –¢—ã –≥–ª—è–¥–∏, –Ω–æ –Ω–µ –¥—ã—à–∏ ‚Äî
// –Ø —Ç–∞–Ω—Ü—É—é –Ω–µ –¥–ª—è –∫–æ—à–µ—á–µ–∫!